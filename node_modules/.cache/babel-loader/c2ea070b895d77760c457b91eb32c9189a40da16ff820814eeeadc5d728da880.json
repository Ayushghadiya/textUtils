{"ast":null,"code":"var _jsxFileName = \"D:\\\\code with harry reactJS\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [text, setText] = useState('Enable Dark Mode');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      setText('Enable Light Mode');\n      document.body.style.backgroundColor = 'gray';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n    } else {\n      setMode('light');\n      setText('Enable Dark Mode');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        mode: mode,\n        toggleMode: toggleMode,\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TextForm, {\n              showAlert: showAlert,\n              heading: \"Enter the Text to analyse below\",\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XmXMnOw+zxDNkgCsArY/KSLN8E8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","TextForm","About","Alert","jsxDEV","_jsxDEV","App","_s","mode","setMode","text","setText","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","style","backgroundColor","title","className","children","Router","fileName","_jsxFileName","lineNumber","columnNumber","Routes","Route","exact","path","element","heading","_c","$RefreshReg$"],"sources":["D:/code with harry reactJS/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [text, setText] = useState('Enable Dark Mode')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      setText('Enable Light Mode')\n      document.body.style.backgroundColor = 'gray'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = 'TextUtils - Dark Mode'\n    } else {\n      setMode('light')\n      setText('Enable Dark Mode')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title = 'TextUtils - Light Mode'\n    }\n  }\n\n  return (\n    <div className=\"App\">\n\n      <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} text={text} />\n        <Alert alert={alert} />\n\n        <div className=\"container my-3\">\n          <Routes>\n            <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the Text to analyse below\" mode={mode} />} />\n            <Route exact path=\"/about\" element={<About />} />\n          </Routes>\n        </div>\n\n      </Router>\n    </div >\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}